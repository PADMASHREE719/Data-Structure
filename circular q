#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>
#define MAX 5

int isFull(int front,int rear)
{
    return(front==(rear+1)%MAX);
}

int isEmpty(int front) //**
{
    return front==-1;
}

void enqueue(int queue[],int *front, int *rear,int value)
{
    if(isFull(*front,*rear))
    {
        printf("\n Queue is full");
    }
    else
    {
        if(*front==-1)
        {
            *front=0;
        }
        *rear=(*rear+1)%MAX;
        queue[*rear]=value;
        printf("\n %d added to queue",queue[*rear]);
    }
}

void dequeue(int queue[],int *front, int *rear)
{
    if(isEmpty(*front))
    {
        printf("\n Queue is empty");
    }
    else if(*front==*rear)
    {
        printf("\n Removed element is %d",queue[*front]);
        *front=*rear=-1;
    }
    else
    {
        printf("Removed element is %d",queue[*front]);
        *front=(*front+1)%MAX;
    }
}

void display(int queue[],int front, int rear)
{
    if(isEmpty(front)) //**
    {
        printf("\n Queue is empty");
    }
    else
    {
        int i=front;
        while(i!=rear)
        {
            printf("%d",queue[i]);
            i=(i+1)%MAX;
        }
        printf("%d",queue[i]);
    }
}

int main()
{
    int queue[MAX];
    int front=-1,rear=-1;
    int choice,value;
    while(1)
    {
        printf("\n ***available operations are:");
        printf("\n 1.enqueue");
        printf("\n 2.dequeu");
        printf("\n 3.Display");
        printf("\n 4.Exit");
        printf("\n enter your choice");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: printf("enter the element to be pushed");
                    scanf("%d",&value);
                    enqueue(queue,&front,&rear,value);
                    break;
            case 2:dequeue(queue,&front,&rear);
                    break;
            case 3:display(queue,front,rear);
                    break;
            case 4:exit(0);
                    break;
            default:printf("\n invalid choice");
                    break;
        }
    }
    return 0;
}
